<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>个人适配WakeUP学校教务课表记录</title>
    <url>/QingNoteblog/2025/07/31/a3975d2b.html</url>
    <content><![CDATA[<h2 id="开头情景"><a href="#开头情景" class="headerlink" title="开头情景"></a>开头情景</h2><p>第一次使用 WakeUp 课程表时，我想使用教务系统导入课程表，但发现自己的学校没有适配教务系统。尝试使用通用教务系统导入后，发现部分课程没有导入，信息也比较混乱，所以我决定自己动手进行适配，但是我并不会写Kotlin代码，当时时间比较紧，就使用AI完成了这个适配，而且效果还不错。</p>
<p>第一步，我们前往 WakeUp 官方提供的适配器仓库 <a href="https://github.com/YZune/CourseAdapter">YZune&#x2F;CourseAdapter</a>，了解适配的基本原理和结构。</p>
<h2 id="适配器代码分析"><a href="#适配器代码分析" class="headerlink" title="适配器代码分析"></a>适配器代码分析</h2><p>适配器的核心是解析教务系统网页的 HTML 源码，提取出课程信息，并将其转换为 WakeUp App 所要求的标准格式。下面我将以我为武汉船舶职业技术学院（基于学校的金智教务系统）编写的适配器为例。</p>
<h3 id="1-核心解析器：WISTParser-kt"><a href="#1-核心解析器：WISTParser-kt" class="headerlink" title="1. 核心解析器：WISTParser.kt"></a>1. 核心解析器：<code>WISTParser.kt</code></h3><p>这个文件是整个适配器的灵魂，它负责从原始的 HTML 文本中提取、清洗和组织课程数据。</p>
<h3 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h3><p>在开始分析代码前，先看一下这个解析器实现了哪些功能：</p>
<ul>
<li><strong>自动清洗周次</strong>：支持 “单周”、”双周”、”X-X周” 等复杂格式。</li>
<li><strong>智能合并课程</strong>：将同一门课程在不同时间点的记录合并。</li>
<li><strong>合并连续节次</strong>：自动将 3-4 节这样的连续课程合并为一个条目。</li>
<li><strong>结构化数据输出</strong>：生成标准的课程列表，包含所有必要信息。</li>
</ul>
<h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main.java.parser</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> bean.Course</span><br><span class="line"><span class="keyword">import</span> Common</span><br><span class="line"><span class="keyword">import</span> main.java.bean.TimeDetail</span><br><span class="line"><span class="keyword">import</span> main.java.bean.TimeTable</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup</span><br><span class="line"><span class="keyword">import</span> parser.Parser</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * WISTParser 教务课表解析器</span></span><br><span class="line"><span class="comment"> * 适配：武汉船舶职业技术学院 金智教务系统</span></span><br><span class="line"><span class="comment"> * 日期：2025-05-22</span></span><br><span class="line"><span class="comment"> * 作者：Qing90bing</span></span><br><span class="line"><span class="comment"> * 注意：2025-05-22为止，该学校教务系统为金智教育系统</span></span><br><span class="line"><span class="comment"> * 因为是测试自己学院的，不知道其他学院情况，有能力的话可以在issue中留言，把课表文件发给我</span></span><br><span class="line"><span class="comment"> * 查询流程：</span></span><br><span class="line"><span class="comment"> * 1.进入教务系统登录地址（统一身份验证）：http://authserver.wspc.edu.cn/authserver/login?service=http%3A%2F%2Fehall.wspc.edu.cn%2Flogin%3Fservice%3Dhttp%3A%2F%2Fehall.wspc.edu.cn%2Fnew%2Findex.html</span></span><br><span class="line"><span class="comment"> * 2.然后学生课表查询网址：http://jw.wspc.edu.cn/jwapp/sys/emaphome/portal/index.do</span></span><br><span class="line"><span class="comment"> * 3.进入课表会需要一段时间，请耐心等待，直到页面加载完成，然后最好点击打印，再获取课表，目前只是过这个步骤。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WISTParser</span>(<span class="keyword">private</span> <span class="keyword">val</span> source: String) : Parser() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成课程列表的核心逻辑从 HTML 中提取课程信息，转换为标准 Course 列表，合并课表时间与周次信息</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">generateCourseList</span><span class="params">()</span></span>: List&lt;Course&gt; &#123;</span><br><span class="line">        <span class="keyword">val</span> courseList = ArrayList&lt;Course&gt;() <span class="comment">// 原始课程列表</span></span><br><span class="line">        <span class="keyword">val</span> doc = Jsoup.parse(source) <span class="comment">// 解析输入的HTML内容</span></span><br><span class="line">        <span class="keyword">val</span> classNameSet = HashSet&lt;String&gt;() <span class="comment">// 班级名称集合（自动去重）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取每个单元格（td）作为一天中的课表格子</span></span><br><span class="line">        <span class="keyword">val</span> itemCells = doc.select(<span class="string">&quot;td[data-role=item]&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> (td <span class="keyword">in</span> itemCells) &#123;</span><br><span class="line">            <span class="comment">// 解析星期几（1-7对应周一到周日）</span></span><br><span class="line">            <span class="keyword">val</span> day = td.attr(<span class="string">&quot;data-week&quot;</span>).toIntOrNull() ?: <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 解析节次范围（数据属性或文本内容）</span></span><br><span class="line">            <span class="keyword">val</span> beginNodeAttr = td.attr(<span class="string">&quot;data-begin-unit&quot;</span>).toIntOrNull()</span><br><span class="line">            <span class="keyword">val</span> endNodeAttr = td.attr(<span class="string">&quot;data-end-unit&quot;</span>).toIntOrNull()</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 提取单元格内的所有课程块</span></span><br><span class="line">            <span class="keyword">val</span> courseDivs = td.select(<span class="string">&quot;div.mtt_arrange_item&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span> (block <span class="keyword">in</span> courseDivs) &#123;</span><br><span class="line">                <span class="comment">// 解析课程基础信息</span></span><br><span class="line">                <span class="keyword">val</span> name = block.selectFirst(<span class="string">&quot;.mtt_item_kcmc&quot;</span>)?.ownText()?.trim() ?: <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">val</span> teacher = block.selectFirst(<span class="string">&quot;.mtt_item_jxbmc&quot;</span>)?.text()?.trim().orEmpty()</span><br><span class="line">                <span class="keyword">val</span> roomInfoRaw = block.selectFirst(<span class="string">&quot;.mtt_item_room&quot;</span>)?.text()?.trim().orEmpty()</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 提取班级名（可用于课表命名）</span></span><br><span class="line">                block.selectFirst(<span class="string">&quot;.mtt_item_bjmc&quot;</span>)?.text()?.trim()?.takeIf &#123; it.isNotEmpty() &#125;?.let &#123;</span><br><span class="line">                    classNameSet += it</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 解析周次信息</span></span><br><span class="line">                <span class="keyword">val</span> rawParts = roomInfoRaw.split(Regex(<span class="string">&quot;[,，]&quot;</span>)).map(String::trim)</span><br><span class="line">                <span class="keyword">val</span> weekParts = rawParts.filter &#123; it.contains(<span class="string">&quot;周&quot;</span>) &#125;</span><br><span class="line">                <span class="keyword">if</span> (weekParts.isEmpty()) <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">val</span> fullWeekStr = weekParts.joinToString(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">                <span class="keyword">val</span> isOdd = fullWeekStr.contains(<span class="string">&quot;单&quot;</span>)</span><br><span class="line">                <span class="keyword">val</span> isEven = fullWeekStr.contains(<span class="string">&quot;双&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 仅保留数字部分，去除“周”等非数字干扰</span></span><br><span class="line">                <span class="keyword">val</span> weekStrCleaned = weekParts.joinToString(<span class="string">&quot;,&quot;</span>) &#123;</span><br><span class="line">                    it.replace(<span class="string">&quot;周&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 提取节次范围（优先使用 data- 属性）</span></span><br><span class="line">                <span class="keyword">val</span> (beginNode, endNode) = extractNodeRange(beginNodeAttr, endNodeAttr, rawParts)</span><br><span class="line">                <span class="keyword">if</span> (beginNode &lt;= <span class="number">0</span> || endNode &lt;= <span class="number">0</span>) <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">val</span> step = endNode - beginNode + <span class="number">1</span></span><br><span class="line">                <span class="keyword">val</span> room = extractRoom(rawParts)</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 按每周生成一个 Course 对象（适配课表结构）</span></span><br><span class="line">                <span class="keyword">for</span> (week <span class="keyword">in</span> parseWeeks(weekStrCleaned, isOdd, isEven)) &#123;</span><br><span class="line">                    courseList += Course(</span><br><span class="line">                        name = name,</span><br><span class="line">                        teacher = teacher,</span><br><span class="line">                        room = room,</span><br><span class="line">                        day = day,</span><br><span class="line">                        startNode = beginNode,</span><br><span class="line">                        endNode = endNode,</span><br><span class="line">                        step = step,</span><br><span class="line">                        startWeek = week,</span><br><span class="line">                        endWeek = week,</span><br><span class="line">                        type = <span class="number">0</span>,</span><br><span class="line">                        note = <span class="string">&quot;&quot;</span></span><br><span class="line">                    )</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 合并周次相同、节次相同的课程</span></span><br><span class="line">        <span class="keyword">val</span> merged = ArrayList&lt;Course&gt;()</span><br><span class="line">        Common.mergeWeekCourse(courseList, merged)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成课程时间表（用于后续显示/提醒）</span></span><br><span class="line">        Common.generateTimeTable(merged, generateTimeTable())</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 合并相邻节次（上下节连排）</span></span><br><span class="line">        <span class="keyword">val</span> optimized = mergeAdjacentNodes(merged)</span><br><span class="line">        <span class="keyword">this</span>.classNames = classNameSet.toList().sorted()</span><br><span class="line">        <span class="keyword">return</span> optimized</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> classNames: List&lt;String&gt; = emptyList()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回学校课表名称（包含班级信息）</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getTableName</span><span class="params">()</span></span>: String &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">if</span> (classNames.isNotEmpty()) &#123;</span><br><span class="line">            <span class="string">&quot;武船&quot;</span> + classNames.joinToString(<span class="string">&quot;,&quot;</span>) + <span class="string">&quot;课表&quot;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="string">&quot;武船课表&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取每日最大节次（固定为12节）</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getNodes</span><span class="params">()</span></span>: <span class="built_in">Int</span> = <span class="number">12</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//学校最大周数</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getMaxWeek</span><span class="params">()</span></span>: <span class="built_in">Int</span> = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义标准时间表（武汉船舶职业技术学院专用）</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">generateTimeTable</span><span class="params">()</span></span>: TimeTable = TimeTable(</span><br><span class="line">        name = <span class="string">&quot;武汉船舶职业技术学院&quot;</span>,</span><br><span class="line">        timeList = listOf(</span><br><span class="line">            TimeDetail(<span class="number">1</span>, <span class="string">&quot;08:10&quot;</span>, <span class="string">&quot;08:55&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">2</span>, <span class="string">&quot;09:05&quot;</span>, <span class="string">&quot;09:50&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">3</span>, <span class="string">&quot;10:10&quot;</span>, <span class="string">&quot;10:55&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">4</span>, <span class="string">&quot;11:05&quot;</span>, <span class="string">&quot;11:50&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">5</span>, <span class="string">&quot;12:30&quot;</span>, <span class="string">&quot;13:10&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">6</span>, <span class="string">&quot;13:20&quot;</span>, <span class="string">&quot;14:00&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">7</span>, <span class="string">&quot;14:00&quot;</span>, <span class="string">&quot;14:45&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">8</span>, <span class="string">&quot;14:55&quot;</span>, <span class="string">&quot;15:40&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">9</span>, <span class="string">&quot;16:00&quot;</span>, <span class="string">&quot;16:45&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">10</span>, <span class="string">&quot;16:55&quot;</span>, <span class="string">&quot;17:40&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">11</span>, <span class="string">&quot;19:00&quot;</span>, <span class="string">&quot;19:45&quot;</span>),</span><br><span class="line">            TimeDetail(<span class="number">12</span>, <span class="string">&quot;19:55&quot;</span>, <span class="string">&quot;20:40&quot;</span>)</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">    <span class="comment">//解析周次字段（如 1-3,5-7(单),10-14(双)）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">parseWeeks</span><span class="params">(rawText: <span class="type">String</span>, ignored1: <span class="type">Boolean</span> = <span class="literal">false</span>, ignored2: <span class="type">Boolean</span> = <span class="literal">false</span>)</span></span>: List&lt;<span class="built_in">Int</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">val</span> weekList = mutableSetOf&lt;<span class="built_in">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">val</span> parts = rawText.split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (part <span class="keyword">in</span> parts) &#123;</span><br><span class="line">            <span class="keyword">val</span> isOdd = part.contains(<span class="string">&quot;单&quot;</span>)</span><br><span class="line">            <span class="keyword">val</span> isEven = part.contains(<span class="string">&quot;双&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 清洗周次数字部分（如 12-14(双) -&gt; 12-14）</span></span><br><span class="line">            <span class="keyword">val</span> clean = part.replace(Regex(<span class="string">&quot;[^0-9\\-]&quot;</span>), <span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">val</span> weekRange = <span class="keyword">if</span> (<span class="string">&quot;-&quot;</span> <span class="keyword">in</span> clean) &#123;</span><br><span class="line">                <span class="keyword">val</span> (start, end) = clean.split(<span class="string">&quot;-&quot;</span>).mapNotNull &#123; it.toIntOrNull() &#125;</span><br><span class="line">                (start..end).toList()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                listOfNotNull(clean.toIntOrNull())</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> filtered = <span class="keyword">when</span> &#123;</span><br><span class="line">                isOdd -&gt; weekRange.filter &#123; it % <span class="number">2</span> == <span class="number">1</span> &#125;</span><br><span class="line">                isEven -&gt; weekRange.filter &#123; it % <span class="number">2</span> == <span class="number">0</span> &#125;</span><br><span class="line">                <span class="keyword">else</span> -&gt; weekRange</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            weekList += filtered</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> weekList.toList().sorted()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断某一周是否是有效的（单/双周筛选）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">isValidWeek</span><span class="params">(week: <span class="type">Int</span>, isOdd: <span class="type">Boolean</span>, isEven: <span class="type">Boolean</span>)</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">if</span> (isOdd) week % <span class="number">2</span> == <span class="number">1</span> <span class="keyword">else</span> <span class="keyword">if</span> (isEven) week % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解析节次字符串（支持“中1”、“中2”等中午节次）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">parseNode</span><span class="params">(str: <span class="type">String</span>)</span></span>: <span class="built_in">Int</span> = <span class="keyword">when</span> &#123;</span><br><span class="line">        str.contains(<span class="string">&quot;中1&quot;</span>) -&gt; <span class="number">5</span>  <span class="comment">// 中午第1节对应第5节</span></span><br><span class="line">        str.contains(<span class="string">&quot;中2&quot;</span>) -&gt; <span class="number">6</span>  <span class="comment">// 中午第2节对应第6节</span></span><br><span class="line">        <span class="keyword">else</span> -&gt; str.filter(<span class="built_in">Char</span>::isDigit).toIntOrNull() ?: -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提取开始和结束节次</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">extractNodeRange</span><span class="params">(beginAttr: <span class="type">Int</span>?, endAttr: <span class="type">Int</span>?, parts: <span class="type">List</span>&lt;<span class="type">String</span>&gt;)</span></span>: Pair&lt;<span class="built_in">Int</span>, <span class="built_in">Int</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">if</span> (beginAttr != <span class="literal">null</span> &amp;&amp; endAttr != <span class="literal">null</span>) &#123;</span><br><span class="line">            Pair(beginAttr, endAttr)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">val</span> nodePart = parts.firstOrNull &#123; nodePattern.matches(it) &#125; ?: <span class="keyword">return</span> Pair(-<span class="number">1</span>, -<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">val</span> nodes = nodePart.split(<span class="string">&quot;-&quot;</span>)</span><br><span class="line">            Pair(parseNode(nodes.first()), parseNode(nodes.last()))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提取教室信息</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">extractRoom</span><span class="params">(parts: <span class="type">List</span>&lt;<span class="type">String</span>&gt;)</span></span>: String &#123;</span><br><span class="line">        <span class="keyword">val</span> roomRegex = Regex(<span class="string">&quot;实验室|教室|机房&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> parts.firstOrNull &#123;</span><br><span class="line">            !it.contains(<span class="string">&quot;周&quot;</span>) &amp;&amp; !it.matches(Regex(<span class="string">&quot;^(中?[1-9]\\d?)(-(中?[1-9]\\d?))?$&quot;</span>)) &amp;&amp; roomRegex.containsMatchIn(it)</span><br><span class="line">        &#125; ?: parts.firstOrNull &#123;</span><br><span class="line">            !it.contains(<span class="string">&quot;周&quot;</span>) &amp;&amp; !it.matches(Regex(<span class="string">&quot;^(中?[1-9]\\d?)(-(中?[1-9]\\d?))?$&quot;</span>))</span><br><span class="line">        &#125;.orEmpty()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//合并相邻节次的课程（如第1-2节与3-4节相邻且内容一致）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">mergeAdjacentNodes</span><span class="params">(courses: <span class="type">List</span>&lt;<span class="type">Course</span>&gt;)</span></span>: List&lt;Course&gt; &#123;</span><br><span class="line">        <span class="keyword">val</span> sorted = courses.sortedWith(</span><br><span class="line">            compareBy&lt;Course&gt; &#123; it.name &#125;</span><br><span class="line">                .thenBy &#123; it.teacher &#125;</span><br><span class="line">                .thenBy &#123; it.room &#125;</span><br><span class="line">                .thenBy &#123; it.day &#125;</span><br><span class="line">                .thenBy &#123; it.startWeek &#125;</span><br><span class="line">                .thenBy &#123; it.endWeek &#125;</span><br><span class="line">                .thenBy &#123; it.startNode &#125;</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">val</span> result = ArrayList&lt;Course&gt;()</span><br><span class="line">        <span class="keyword">var</span> current = sorted[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span> until sorted.size) &#123;</span><br><span class="line">            <span class="keyword">val</span> next = sorted[i]</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                current.name == next.name &amp;&amp;</span><br><span class="line">                current.teacher == next.teacher &amp;&amp;</span><br><span class="line">                current.room == next.room &amp;&amp;</span><br><span class="line">                current.day == next.day &amp;&amp;</span><br><span class="line">                current.startWeek == next.startWeek &amp;&amp;</span><br><span class="line">                current.endWeek == next.endWeek &amp;&amp;</span><br><span class="line">                current.type == next.type &amp;&amp;</span><br><span class="line">                current.endNode + <span class="number">1</span> == next.startNode</span><br><span class="line">            ) &#123;</span><br><span class="line">                current = current.copy(</span><br><span class="line">                    endNode = next.endNode,</span><br><span class="line">                    step = next.endNode - current.startNode + <span class="number">1</span></span><br><span class="line">                )</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result += current</span><br><span class="line">                current = next</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        result += current</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//从完整 HTML 中提取课表表格部分</span></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> weekPattern = Regex(<span class="string">&quot;[^0-9\\-,(单双)]&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> nodePattern = Regex(<span class="string">&quot;^(中?[1-9]\\d?)(-(中?[1-9]\\d?))?$&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">extractTableHtml</span><span class="params">(fullHtml: <span class="type">String</span>)</span></span>: String? &#123;</span><br><span class="line">            <span class="keyword">return</span> Jsoup.parse(fullHtml).selectFirst(<span class="string">&quot;table.wut_table&quot;</span>)?.outerHtml()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="关键逻辑拆解"><a href="#关键逻辑拆解" class="headerlink" title="关键逻辑拆解"></a>关键逻辑拆解</h3><ol>
<li><strong><code>generateCourseList()</code></strong>：这是最核心的方法。<ul>
<li>它使用 <code>Jsoup.parse(source)</code> 将 HTML 字符串转换成一个可操作的文档对象。</li>
<li>通过 <code>doc.select(&quot;td[data-role=item]&quot;)</code> 定位到所有包含课程信息的单元格。</li>
<li>遍历每个单元格，提取 <code>data-week</code> (星期几)、<code>data-begin-unit</code> (开始节次) 等关键属性。</li>
<li>在单元格内部，通过 <code>select(&quot;div.mtt_arrange_item&quot;)</code> 找到具体的课程信息块。</li>
<li>从课程块中解析出课程名 (<code>.mtt_item_kcmc</code>)、教师 (<code>.mtt_item_jxbmc</code>) 和包含周次、教室的混合信息 (<code>.mtt_item_room</code>)。</li>
<li>最关键的一步是解析周次。代码首先分离出包含“周”的字符串，然后通过 <code>parseWeeks</code> 函数将其转换为一个整数列表（例如 <code>[1, 2, 3, 5, 7, 9]</code>）。</li>
<li>最后，它为每个有效的周次都创建一个 <code>Course</code> 对象，并添加到列表中。在所有课程都被初步解析后，调用 <code>Common.mergeWeekCourse</code> 和自定义的 <code>mergeAdjacentNodes</code> 进行合并与优化。</li>
</ul>
</li>
<li><strong><code>parseWeeks()</code></strong>：这个辅助函数专门处理复杂的周次字符串。<ul>
<li>它能识别 <code>1-16</code> 这样的范围，也能识别 <code>单</code>、<code>双</code> 关键字，并据此过滤周次。</li>
<li>例如，对于 <code>&quot;9-12(双)&quot;</code>，它会先生成 <code>[9, 10, 11, 12]</code>，然后因为有“双”字，只保留偶数，最终得到 <code>[10, 12]</code>。</li>
</ul>
</li>
<li><strong><code>extractRoom()</code> 和 <code>extractNodeRange()</code></strong>：这两个函数负责从混杂的字符串中提取有用的信息。<ul>
<li><code>extractNodeRange</code> 优先使用 <code>data-</code> 属性，如果不存在，则从文本中通过正则表达式匹配节次信息。</li>
<li><code>extractRoom</code> 则通过排除法，剔除掉周次和节次信息后，将剩余部分作为教室地点。</li>
</ul>
</li>
<li><strong><code>mergeAdjacentNodes()</code></strong>：这是一个优化步骤。<ul>
<li>在处理完所有课程后，有些课程可能是连续的（例如，同一门课在第1-2节和第3-4节），这个函数会将它们合并成一个更长的节次（第1-4节），使课表更整洁。</li>
</ul>
</li>
</ol>
<h3 id="2-测试与验证：WISTTest-kt"><a href="#2-测试与验证：WISTTest-kt" class="headerlink" title="2. 测试与验证：WISTTest.kt"></a>2. 测试与验证：<code>WISTTest.kt</code></h3><p>编写完解析器后，如何验证它的正确性呢？这就需要一个测试文件，用于开发和调试阶段。</p>
<h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><ul>
<li>从本地读取保存的课表 HTML 文件。</li>
<li>调用 <code>WISTParser</code> 进行解析。</li>
<li>以多种格式清晰地打印解析结果。</li>
<li><strong>冲突检测</strong>：检查同一时间是否有两门或以上课程。</li>
<li><strong>汇总分析</strong>：统计每门课的上课周次、教室和总课时。</li>
<li><strong>CSV 导出</strong>：将解析结果导出为 <code>csv</code> 文件，方便使用工具查看。</li>
</ul>
<h3 id="完整代码-1"><a href="#完整代码-1" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main.java.test</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> main.java.parser.WISTParser</span><br><span class="line"><span class="keyword">import</span> bean.Course</span><br><span class="line"><span class="keyword">import</span> java.io.File</span><br><span class="line"><span class="keyword">import</span> java.io.IOException</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat</span><br><span class="line"><span class="keyword">import</span> java.util.*</span><br><span class="line"><span class="keyword">import</span> kotlin.system.measureTimeMillis</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// ======================== [ ⚙️配置区 - 调试开关 ] ========================</span></span><br><span class="line">    <span class="keyword">val</span> enableCourseDetailLog  = <span class="literal">true</span>     <span class="comment">// 是否打印每门课的详细信息</span></span><br><span class="line">    <span class="keyword">val</span> enableConflictCheck    = <span class="literal">true</span>     <span class="comment">// 是否检查课程冲突</span></span><br><span class="line">    <span class="keyword">val</span> enableWeekSummary      = <span class="literal">true</span>     <span class="comment">// 是否汇总相同课程的所有周数</span></span><br><span class="line">    <span class="keyword">val</span> enableRoomSummary      = <span class="literal">false</span>    <span class="comment">// 是否统计课程使用的所有教室</span></span><br><span class="line">    <span class="keyword">val</span> enableDurationSummary  = <span class="literal">false</span>    <span class="comment">// 是否统计每门课总课时</span></span><br><span class="line">    <span class="keyword">val</span> enableTimeSummary      = <span class="literal">true</span>     <span class="comment">// 是否统计解析课表的总时间</span></span><br><span class="line">    <span class="comment">// ======================== [ ⚙️CSV配置区 - 调试开关 ] ========================</span></span><br><span class="line">    <span class="keyword">val</span> enableCsvExport        = <span class="literal">true</span>     <span class="comment">// 是否启用 CSV 导出功能</span></span><br><span class="line">    <span class="comment">// =====================================================================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ======== 1. 读取 HTML 文件内容 ========</span></span><br><span class="line">    <span class="comment">// 示例中用了相对路径，Windows 下可能需要修改</span></span><br><span class="line">    <span class="comment">// 建议从项目外引用 html 文件</span></span><br><span class="line">    <span class="comment">// 提交时一定不要上传 html 文件，涉及隐私问题</span></span><br><span class="line">    <span class="keyword">val</span> htmlFilePath = <span class="string">&quot;D:/Download/Programs/WC2025-05-31.html&quot;</span> <span class="comment">// 请修改为你的HTML文件路径</span></span><br><span class="line">    <span class="keyword">val</span> htmlContent = <span class="keyword">try</span> &#123;</span><br><span class="line">        File(htmlFilePath).readText()</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e: IOException) &#123;</span><br><span class="line">        println(<span class="string">&quot;❌ 无法读取 HTML 文件: <span class="subst">$&#123;e.message&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    println(<span class="string">&quot;🕒 当前时间：<span class="subst">$&#123;SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(Date())&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ======== 2. 初始化解析器并获取课程列表 ========</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> courseList: List&lt;Course&gt;</span><br><span class="line">    <span class="keyword">val</span> duration = measureTimeMillis &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">val</span> parser = WISTParser(htmlContent)</span><br><span class="line">            courseList = parser.generateCourseList()</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">            println(<span class="string">&quot;❌ 解析器异常：<span class="subst">$&#123;e.message&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (courseList.isEmpty()) &#123;</span><br><span class="line">        println(<span class="string">&quot;📭 未解析出任何课程，请检查 HTML 内容是否正确。&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (enableCourseDetailLog) &#123;</span><br><span class="line">        <span class="keyword">val</span> groupedCourses = courseList.groupBy &#123;</span><br><span class="line">            listOf(it.name, it.teacher, it.room, it.day, it.startNode, it.endNode)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        println(<span class="string">&quot;\n📚 课程解析详情\n&quot;</span> + <span class="string">&quot;-&quot;</span>.repeat(<span class="number">50</span>))</span><br><span class="line">        groupedCourses.values.forEachIndexed &#123; index, group -&gt;</span><br><span class="line">            <span class="keyword">val</span> sample = group.first()</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 解析每个课程的周次</span></span><br><span class="line">            <span class="keyword">val</span> weeks = group.flatMap &#123; course -&gt;</span><br><span class="line">                (course.startWeek..course.endWeek).toList()</span><br><span class="line">            &#125;.toSet().sorted()</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 打印课程详情</span></span><br><span class="line">            println(<span class="string">&quot;🔹 第 <span class="subst">$&#123;index + <span class="number">1</span>&#125;</span> 门课&quot;</span>.padEnd(<span class="number">30</span>, <span class="string">&#x27;─&#x27;</span>))</span><br><span class="line">            println(<span class="string">&quot;📓 课程名称 : <span class="subst">$&#123;sample.name&#125;</span>&quot;</span>)</span><br><span class="line">            println(<span class="string">&quot;🧑🏻‍🏫 教师     : <span class="subst">$&#123;sample.teacher&#125;</span>&quot;</span>)</span><br><span class="line">            println(<span class="string">&quot;📅 周数     : <span class="subst">$&#123;weeks.joinToString(<span class="string">&quot;, &quot;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">            println(<span class="string">&quot;⏰ 节次     : 第 <span class="subst">$&#123;sample.startNode&#125;</span> - <span class="subst">$&#123;sample.endNode&#125;</span> 节&quot;</span>)</span><br><span class="line">            println(<span class="string">&quot;📆 星期     : 周 <span class="subst">$&#123;sample.day&#125;</span>&quot;</span>)</span><br><span class="line">            println(<span class="string">&quot;📍 地点     : <span class="subst">$&#123;sample.room&#125;</span>&quot;</span>)</span><br><span class="line">            println(<span class="string">&quot;📝 备注     : <span class="subst">$&#123;sample.note&#125;</span>&quot;</span>)</span><br><span class="line">            println()</span><br><span class="line">        &#125;</span><br><span class="line">        println(<span class="string">&quot;📥 共解析出 <span class="subst">$&#123;groupedCourses.size&#125;</span> 门课程。&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ======== 4. 冲突检测（可配置） ========</span></span><br><span class="line">    <span class="keyword">if</span> (enableConflictCheck) &#123;</span><br><span class="line">        println(<span class="string">&quot;\n🔍 冲突检测结果\n&quot;</span> + <span class="string">&quot;-&quot;</span>.repeat(<span class="number">50</span>))</span><br><span class="line">        <span class="keyword">val</span> conflicts = mutableListOf&lt;Pair&lt;Course, Course&gt;&gt;()</span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> courseList.indices) &#123;</span><br><span class="line">            <span class="keyword">for</span> (j <span class="keyword">in</span> i + <span class="number">1</span> until courseList.size) &#123;</span><br><span class="line">                <span class="keyword">val</span> a = courseList[i]</span><br><span class="line">                <span class="keyword">val</span> b = courseList[j]</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 核心：比较是否为同一周、同一天、时间重叠</span></span><br><span class="line">                <span class="keyword">val</span> sameWeek = (a.startWeek..a.endWeek).intersect(b.startWeek..b.endWeek).isNotEmpty()</span><br><span class="line">                <span class="keyword">val</span> sameDay = a.day == b.day</span><br><span class="line">                <span class="keyword">val</span> timeOverlap = a.startNode &lt;= b.endNode &amp;&amp; b.startNode &lt;= a.endNode</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (sameWeek &amp;&amp; sameDay &amp;&amp; timeOverlap) &#123;</span><br><span class="line">                    conflicts += a to b</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (conflicts.isEmpty()) &#123;</span><br><span class="line">            println(<span class="string">&quot;✅ 未发现课程冲突。😄&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            println(<span class="string">&quot;⚠️ 共发现 <span class="subst">$&#123;conflicts.size&#125;</span> 处冲突😔：&quot;</span>)</span><br><span class="line">            conflicts.forEachIndexed &#123; idx, (c1, c2) -&gt;</span><br><span class="line">                println(<span class="string">&quot;🆘 冲突 <span class="subst">$&#123;idx + <span class="number">1</span>&#125;</span>&quot;</span>)</span><br><span class="line">                println(<span class="string">&quot;🅰️ <span class="subst">$&#123;c1.name&#125;</span> (周<span class="subst">$&#123;c1.startWeek&#125;</span>-<span class="subst">$&#123;c1.endWeek&#125;</span>, 周<span class="subst">$&#123;c1.day&#125;</span>, 节<span class="subst">$&#123;c1.startNode&#125;</span>-<span class="subst">$&#123;c1.endNode&#125;</span>)&quot;</span>)</span><br><span class="line">                println(<span class="string">&quot;🅱️ <span class="subst">$&#123;c2.name&#125;</span> (周<span class="subst">$&#123;c2.startWeek&#125;</span>-<span class="subst">$&#123;c2.endWeek&#125;</span>, 周<span class="subst">$&#123;c2.day&#125;</span>, 节<span class="subst">$&#123;c2.startNode&#125;</span>-<span class="subst">$&#123;c2.endNode&#125;</span>)\n&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ======== 5. 汇总分析：周数、教室、总课时 ========</span></span><br><span class="line">    <span class="keyword">if</span> (enableWeekSummary || enableRoomSummary || enableDurationSummary) &#123;</span><br><span class="line">        println(<span class="string">&quot;\n📊 课程汇总分析\n&quot;</span> + <span class="string">&quot;-&quot;</span>.repeat(<span class="number">50</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> weekMap = mutableMapOf&lt;String, MutableSet&lt;<span class="built_in">Int</span>&gt;&gt;()</span><br><span class="line">        <span class="keyword">val</span> roomMap = mutableMapOf&lt;String, MutableSet&lt;String&gt;&gt;()</span><br><span class="line">        <span class="keyword">val</span> hourMap = mutableMapOf&lt;String, <span class="built_in">Int</span>&gt;()</span><br><span class="line"></span><br><span class="line">        courseList.forEach &#123; course -&gt;</span><br><span class="line">            <span class="keyword">val</span> key = <span class="string">&quot;<span class="subst">$&#123;course.name&#125;</span>__<span class="subst">$&#123;course.teacher&#125;</span>&quot;</span></span><br><span class="line">            <span class="keyword">val</span> allWeeks = (course.startWeek..course.endWeek).toSet()</span><br><span class="line">            <span class="keyword">val</span> room = course.room.trim()</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断是否是单双周</span></span><br><span class="line">            <span class="keyword">val</span> weekType = course.type <span class="comment">// 1为单双周，0为不处理单双周</span></span><br><span class="line">            <span class="keyword">val</span> weeks = <span class="keyword">when</span> (weekType) &#123;</span><br><span class="line">                <span class="number">1</span> -&gt; allWeeks.filter &#123; it % <span class="number">2</span> == <span class="number">1</span> &#125;.toSet()  <span class="comment">// 单周，保留奇数周</span></span><br><span class="line">                <span class="number">0</span> -&gt; allWeeks <span class="comment">// 不做单双周处理，保留所有周次</span></span><br><span class="line">                <span class="keyword">else</span> -&gt; allWeeks.filter &#123; it % <span class="number">2</span> == <span class="number">0</span> &#125;.toSet()  <span class="comment">// 默认处理为双周，保留偶数周</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 汇总上课周数</span></span><br><span class="line">            <span class="keyword">if</span> (enableWeekSummary) &#123;</span><br><span class="line">                weekMap.getOrPut(key) &#123; mutableSetOf() &#125;.addAll(weeks)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 汇总教室信息</span></span><br><span class="line">            <span class="keyword">if</span> (enableRoomSummary &amp;&amp; room.isNotBlank()) &#123;</span><br><span class="line">                roomMap.getOrPut(key) &#123; mutableSetOf() &#125;.add(room)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 汇总课时数（按双节次为 1 节计）</span></span><br><span class="line">            <span class="keyword">if</span> (enableDurationSummary) &#123;</span><br><span class="line">                <span class="keyword">val</span> duration = (course.endNode - course.startNode + <span class="number">1</span>) / <span class="number">2</span></span><br><span class="line">                hourMap[key] = (hourMap[key] ?: <span class="number">0</span>) + duration * weeks.size</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印结果</span></span><br><span class="line">        weekMap.keys.union(roomMap.keys).union(hourMap.keys).forEach &#123; key -&gt;</span><br><span class="line">            <span class="keyword">val</span> (name, teacher) = key.split(<span class="string">&quot;__&quot;</span>)</span><br><span class="line">            println(<span class="string">&quot;📓 课程名 : <span class="variable">$name</span>&quot;</span>)</span><br><span class="line">            println(<span class="string">&quot;🧑🏻‍🏫 教师   : <span class="variable">$teacher</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> (enableWeekSummary) &#123;</span><br><span class="line">                <span class="keyword">val</span> weeks = weekMap[key]?.toList()?.sorted() ?: emptyList()</span><br><span class="line">                println(<span class="string">&quot;🌤️ 上课周 : <span class="variable">$weeks</span>&quot;</span>)</span><br><span class="line">                println(<span class="string">&quot;🔢 周数段 : <span class="subst">$&#123;compactWeekList(weeks)&#125;</span>&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (enableRoomSummary) &#123;</span><br><span class="line">                <span class="keyword">val</span> rooms = roomMap[key]?.toList()?.sorted() ?: emptyList()</span><br><span class="line">                println(<span class="string">&quot;🏫 教室列表 : <span class="subst">$&#123;rooms.joinToString(<span class="string">&quot;、&quot;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (enableDurationSummary) &#123;</span><br><span class="line">                <span class="keyword">val</span> totalHours = hourMap[key] ?: <span class="number">0</span></span><br><span class="line">                println(<span class="string">&quot;⏱️ 总课时 : <span class="variable">$totalHours</span> 节&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            println()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (enableDurationSummary) &#123;</span><br><span class="line">            println(<span class="string">&quot;🧮 所有课程合计上课节数：<span class="subst">$&#123;hourMap.values.sum()&#125;</span> 节&quot;</span>)</span><br><span class="line">            println(<span class="string">&quot;📌 注：每 2 个节次 node 计为 1 节课（如 node=1,2 为 1 节）\n&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (enableTimeSummary) &#123;</span><br><span class="line">        println(<span class="string">&quot;⏳ 本次课表汇总解析耗时：<span class="subst">$&#123;duration&#125;</span>ms\n&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// CSV导出功能</span></span><br><span class="line">    <span class="keyword">if</span> (enableCsvExport) &#123;</span><br><span class="line">        print(<span class="string">&quot;📤 是否导出课程表为 CSV 到桌面？（Y/n）：&quot;</span>)</span><br><span class="line">        <span class="keyword">val</span> answer = readLine()?.trim()?.lowercase()</span><br><span class="line">        <span class="keyword">if</span> (answer.isNullOrEmpty() || answer == <span class="string">&quot;y&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">val</span> desktopPath = System.getProperty(<span class="string">&quot;user.home&quot;</span>) + <span class="string">&quot;/Desktop&quot;</span></span><br><span class="line">                <span class="keyword">val</span> resultFolder = File(desktopPath, <span class="string">&quot;解析结果&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> (!resultFolder.exists()) &#123;</span><br><span class="line">                    resultFolder.mkdirs()</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 使用大写HH表示24小时制</span></span><br><span class="line">                <span class="keyword">val</span> date = SimpleDateFormat(<span class="string">&quot;yyyyMMdd_HHmmss&quot;</span>).format(Date())</span><br><span class="line">                <span class="keyword">val</span> fileName = <span class="string">&quot;课表导出_<span class="variable">$date</span>.csv&quot;</span></span><br><span class="line">                <span class="keyword">val</span> csvFile = File(resultFolder, fileName)</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 分组并整理为每组一行，包含所有周数</span></span><br><span class="line">                <span class="keyword">val</span> grouped = courseList.groupBy &#123;</span><br><span class="line">                    listOf(it.name, it.teacher, it.room, it.day, it.startNode, it.endNode)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                csvFile.printWriter().use &#123; writer -&gt;</span><br><span class="line">                    writer.println(<span class="string">&quot;课程名称,星期,开始节数,结束节数,老师,地点,周数&quot;</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> ((_, group) <span class="keyword">in</span> grouped) &#123;</span><br><span class="line">                        <span class="keyword">val</span> sample = group.first()</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 根据 course.type 判断单双周</span></span><br><span class="line">                        <span class="keyword">val</span> validWeekList = group.flatMap &#123; course -&gt;</span><br><span class="line">                            <span class="keyword">val</span> allWeeks = (course.startWeek..course.endWeek).toSet()</span><br><span class="line"></span><br><span class="line">                            <span class="comment">// 判断单双周</span></span><br><span class="line">                            <span class="keyword">when</span> (course.type) &#123;</span><br><span class="line">                                <span class="number">1</span> -&gt; allWeeks.filter &#123; it % <span class="number">2</span> == <span class="number">1</span> &#125;  <span class="comment">// 单周，保留奇数周</span></span><br><span class="line">                                <span class="number">0</span> -&gt; allWeeks  <span class="comment">// 不做单双周处理，保留所有周次</span></span><br><span class="line">                                <span class="keyword">else</span> -&gt; allWeeks.filter &#123; it % <span class="number">2</span> == <span class="number">0</span> &#125;  <span class="comment">// 默认处理为双周，保留偶数周</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;.toSet().sorted()</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 生成格式化的周次字符串</span></span><br><span class="line">                        <span class="keyword">val</span> weekTypeDesc = <span class="keyword">when</span> (sample.type) &#123;</span><br><span class="line">                            <span class="number">1</span> -&gt; <span class="keyword">when</span> &#123;</span><br><span class="line">                                validWeekList.all &#123; it % <span class="number">2</span> == <span class="number">1</span> &#125; -&gt; <span class="string">&quot;（单周）&quot;</span></span><br><span class="line">                                validWeekList.all &#123; it % <span class="number">2</span> == <span class="number">0</span> &#125; -&gt; <span class="string">&quot;（双周）&quot;</span></span><br><span class="line">                                <span class="keyword">else</span> -&gt; <span class="string">&quot;&quot;</span></span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> -&gt; <span class="string">&quot;&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">val</span> weekStr = <span class="string">&quot;<span class="subst">$&#123;compactWeekList(validWeekList)&#125;</span> <span class="variable">$weekTypeDesc</span>&quot;</span>.trim()</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 关键修复：用双引号包裹可能包含逗号的字段</span></span><br><span class="line">                        <span class="keyword">val</span> line = listOf(</span><br><span class="line">                            escapeCsvField(sample.name),</span><br><span class="line">                            sample.day.toString(),</span><br><span class="line">                            sample.startNode.toString(),</span><br><span class="line">                            sample.endNode.toString(),</span><br><span class="line">                            escapeCsvField(sample.teacher),</span><br><span class="line">                            escapeCsvField(sample.room),</span><br><span class="line">                            escapeCsvField(weekStr)</span><br><span class="line">                        ).joinToString(<span class="string">&quot;,&quot;</span>)</span><br><span class="line"></span><br><span class="line">                        writer.println(line)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                println(<span class="string">&quot;✅ CSV 导出成功！文件位置：<span class="subst">$&#123;csvFile.absolutePath&#125;</span>&quot;</span>)</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">                println(<span class="string">&quot;❌ 导出失败：<span class="subst">$&#123;e.message&#125;</span>&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            println(<span class="string">&quot;📁 用户选择取消导出。&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    println(<span class="string">&quot;🏁 测试结束:)\n&quot;</span> + <span class="string">&quot;-&quot;</span>.repeat(<span class="number">50</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工具函数：</span></span><br><span class="line"><span class="comment"> * 将整数周列表如 [1,2,3,5,6,9] 转换为格式化段落字符串 &quot;1-3,5-6,9&quot;</span></span><br><span class="line"><span class="comment"> * 用于更美观地上课周数展示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">compactWeekList</span><span class="params">(weeks: <span class="type">List</span>&lt;<span class="type">Int</span>&gt;)</span></span>: String &#123;</span><br><span class="line">    <span class="keyword">if</span> (weeks.isEmpty()) <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">val</span> result = mutableListOf&lt;String&gt;()</span><br><span class="line">    <span class="keyword">var</span> start = weeks[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">var</span> end = weeks[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span> until weeks.size) &#123;</span><br><span class="line">        <span class="keyword">if</span> (weeks[i] == end + <span class="number">1</span>) &#123;</span><br><span class="line">            end = weeks[i]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result += <span class="keyword">if</span> (start == end) <span class="string">&quot;<span class="variable">$start</span>&quot;</span> <span class="keyword">else</span> <span class="string">&quot;<span class="variable">$start</span>-<span class="variable">$end</span>&quot;</span></span><br><span class="line">            start = weeks[i]</span><br><span class="line">            end = weeks[i]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    result += <span class="keyword">if</span> (start == end) <span class="string">&quot;<span class="variable">$start</span>&quot;</span> <span class="keyword">else</span> <span class="string">&quot;<span class="variable">$start</span>-<span class="variable">$end</span>&quot;</span></span><br><span class="line">    <span class="keyword">return</span> result.joinToString(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新增：CSV字段转义函数，处理特殊字符</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">escapeCsvField</span><span class="params">(field: <span class="type">String</span>)</span></span>: String &#123;</span><br><span class="line">    <span class="comment">// 如果字段包含逗号、引号或换行符，则用双引号包裹并转义内部引号</span></span><br><span class="line">    <span class="keyword">if</span> (field.contains(<span class="string">&quot;,&quot;</span>) || field.contains(<span class="string">&quot;\&quot;&quot;</span>) || field.contains(<span class="string">&quot;\n&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\&quot;<span class="subst">$&#123;field.replace(<span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;\&quot;\&quot;&quot;</span>)&#125;</span>\&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> field</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ol>
<li>在你的教务系统网页上，按 <code>F12</code> 打开开发者工具，选取课表区域然后保存网页为 HTML 文件。</li>
<li>修改 <code>WISTTest.kt</code> 文件中的 <code>htmlFilePath</code> 变量，使其指向你保存的 HTML 文件路径。</li>
<li>运行 <code>main</code> 函数，观察控制台的输出。</li>
<li>通过开关顶部的 <code>enable...</code> 布尔值变量，可以控制输出内容的详细程度，这在调试时非常有用。<br>**注意：**当时测试时发现使用查看CSV是正常的，如果使用Excel会导致部分显示不正常错位，建议还是使用CSV软件来查看导出结果。</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>自己动手适配教务系统虽然需要一些编程基础。核心在于<strong>分析 HTML 结构</strong>和<strong>处理不规范的文本数据</strong>。只要掌握了 <code>Jsoup</code> 的基本用法和一些 Kotlin 的数据处理技巧，你也可以为自己的学校贡献一个适配器。</p>
<p>如果需要查看和<code>WISTTest.kt</code>和<code>WISTParser.kt</code>原文件，可以前往我的复刻仓库搜索文件查看<a href="https://github.com/Qing90bing/CourseAdapter/tree/wist-parser">Qing90bing&#x2F;CourseAdapter</a></p>
<p>希望这篇文章能对同样想进行适配的同学有所帮助！</p>
]]></content>
      <tags>
        <tag>代码</tag>
        <tag>WakeUP课程表</tag>
        <tag>适配</tag>
        <tag>解析</tag>
      </tags>
  </entry>
  <entry>
    <title>告别拖延：这款App如何改变我的工作流</title>
    <url>/QingNoteblog/2025/07/28/3e8b7646.html</url>
    <content><![CDATA[<p>继上一篇立下写作的 Flag 之后，我发现最大的敌人就是“拖延症”。在尝试了多种方法后，我终于找到了一款名为“FocusFlow”的神器，它极大地改善了我的工作和学习效率。</p>
<h2 id="核心功能一览"><a href="#核心功能一览" class="headerlink" title="核心功能一览"></a>核心功能一览</h2><p>FocusFlow 并没有复杂的功能，而是将最核心的效率工具做到了极致：</p>
<ol>
<li><strong>智能任务清单</strong>：不仅仅是罗列任务，它能根据你设定的优先级和截止日期，智能推荐当天最需要完成的事项。</li>
<li><strong>番茄工作法计时器</strong>：内置经典的番茄钟，每完成一个25分钟的专注时段，就能获得短暂休息。这种节奏感让我更容易投入。</li>
<li><strong>白噪音背景音</strong>：提供如图书馆、咖啡馆、雨天等多种白噪音选项，帮助屏蔽干扰，创造沉浸式的工作环境。</li>
</ol>
<h2 id="我的使用体验"><a href="#我的使用体验" class="headerlink" title="我的使用体验"></a>我的使用体验</h2><p>对我来说，改变最大的是“<strong>任务分解</strong>”和“<strong>正向激励</strong>”。</p>
<p>当我有一个大任务，比如“写一篇关于旅行的文章”时，我会用 FocusFlow 将它分解成“搜集资料”、“拟定大纲”、“撰写初稿”、“配图和修改”等小步骤。每完成一个番茄钟，应用都会有一个小小的庆祝动画，这种即时的满足感给了我持续下去的动力。</p>
<blockquote>
<p>“我们不是在管理时间，而是在管理我们自己。”</p>
</blockquote>
<p>如果你也像我一样，时常被繁杂的任务和无处不在的干扰所困扰，不妨试试这款 App。有时候，一个好的工具真的能事半功倍。</p>
]]></content>
      <tags>
        <tag>效率</tag>
        <tag>App</tag>
        <tag>科技</tag>
      </tags>
  </entry>
  <entry>
    <title>读《人类简史》：一次关于我们是谁的宏大叙事</title>
    <url>/QingNoteblog/2025/07/29/5f631fa5.html</url>
    <content><![CDATA[<p>很长一段时间里，我对历史的认知都停留在教科书式的年代和事件上。直到我读了尤瓦尔·赫拉利的《人类简史：从动物到上帝》，这种认知被彻底颠覆了。这本书用一种极其宏大而又通俗易懂的视角，重新讲述了我们智人的故事。</p>
<h2 id="从认知革命到科学革命"><a href="#从认知革命到科学革命" class="headerlink" title="从认知革命到科学革命"></a>从认知革命到科学革命</h2><p>作者将人类7万年的历史浓缩为三个关键的革命：</p>
<ol>
<li><strong>认知革命</strong>：大约7万年前，智人发展出了独特的语言，能够讨论虚构的事物，从而形成了部落、国家、宗教等大规模协作的基础。</li>
<li><strong>农业革命</strong>：大约1.2万年前，我们学会了种植和畜牧。这看似是进步，但作者却认为，它可能是一个“史上最大的骗局”，让人类的生活变得更辛苦，饮食更单一。</li>
<li><strong>科学革命</strong>：仅仅500年前，人类承认了自己的无知，并开始用观察和数学来探索世界，从而获得了前所未有的力量。</li>
</ol>
<h2 id="最让我震撼的观点"><a href="#最让我震撼的观点" class="headerlink" title="最让我震撼的观点"></a>最让我震撼的观点</h2><p>书中颠覆性的观点俯拾即是，但最让我印象深刻的是关于“想象的共同体”的概念。</p>
<blockquote>
<p>金钱、国家、法律、宗教……所有这些我们赖以生存的秩序，本质上都只存在于我们的共同想象之中。一张绿色的纸（钞票）本身毫无价值，但因为我们所有人都相信它有价值，它才能换来商品和服务。</p>
</blockquote>
<p>正是这种构建和相信故事的能力，让我们从一种无足轻重的非洲猿类，变成了地球的主宰。</p>
<p>读完这本书，我抬头看周围的世界，仿佛一切都变得不一样了。它没有提供轻松的答案，却引发了无穷的思考：我们从哪里来？我们如何走到了今天？以及，我们最终将走向何方？</p>
<p>这不仅仅是一本历史书，更是一本关于人类自身、关于我们未来的深刻启示录。强烈推荐给每一个对世界保持好奇心的人。</p>
]]></content>
      <tags>
        <tag>阅读</tag>
        <tag>历史</tag>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇文章</title>
    <url>/QingNoteblog/2025/07/28/7a776471.html</url>
    <content><![CDATA[<p>欢迎来到我的世界！这是我正式写下的第一篇文章，用来记录一些想法和感受。我感到非常兴奋，也有些许紧张，希望这只是一个开始。</p>
<h2 id="为什么开始写作？"><a href="#为什么开始写作？" class="headerlink" title="为什么开始写作？"></a>为什么开始写作？</h2><p>一直以来，我都觉得写作是一件很有意义的事情。它可以帮助我：</p>
<ul>
<li><strong>梳理思绪</strong>：将脑海中杂乱的想法整理成有条理的文字。</li>
<li><strong>记录生活</strong>：捕捉那些容易被遗忘的瞬间和感悟。</li>
<li><strong>分享知识</strong>：如果我的经验能帮助到哪怕一个人，那也是值得的。</li>
<li><strong>提升自我</strong>：通过持续的输入和输出，不断学习和进步。</li>
</ul>
<h2 id="我想写些什么？"><a href="#我想写些什么？" class="headerlink" title="我想写些什么？"></a>我想写些什么？</h2><p>我对很多领域都充满好奇，未来我可能会在这里分享关于以下主题的内容：</p>
<ol>
<li><strong>科技与生活</strong>：聊聊最新的科技产品，或者分享一些好用的软件和技巧。</li>
<li><strong>旅行日记</strong>：记录旅途中的风景和故事。</li>
<li><strong>阅读笔记</strong>：分享最近读过的好书，摘录一些发人深省的句子。</li>
<li><strong>美食探店</strong>：作为一个吃货，美食的诱惑怎么能抵挡？</li>
</ol>
<blockquote>
<p>“千里之行，始于足下。”</p>
</blockquote>
<p>希望这篇文章能成为我的“足下”第一步。未来还有很长的路要走，但我已经准备好迎接挑战，用文字去探索更广阔的世界。</p>
<p>感谢你的阅读，期待与你在这里再次相遇！</p>
]]></content>
      <tags>
        <tag>开始</tag>
      </tags>
  </entry>
  <entry>
    <title>镰仓一日：海与古都的悠然时光</title>
    <url>/QingNoteblog/2025/07/29/edb50152.html</url>
    <content><![CDATA[<p>东京的夏日总是伴随着喧嚣与热浪。为了寻得片刻宁静，上个周末，我进行了一次说走就走的旅行，目的地是那座离尘不离城的古都——镰仓。</p>
<h2 id="长谷寺的紫阳花与海景"><a href="#长谷寺的紫阳花与海景" class="headerlink" title="长谷寺的紫阳花与海景"></a>长谷寺的紫阳花与海景</h2><p>第一站是长谷寺。虽然错过了最盛大的花期，但寺庙内零星开放的紫阳花依然动人。沿着石阶向上，视野逐渐开阔。在观景台上，可以俯瞰到整个由比滨海岸线，海风吹来，带走了夏日的燥热，也吹散了心中的烦忧。</p>
<p><em>那一刻，我才真正理解了什么叫‘面朝大海，春暖花开’。</em></p>
<h2 id="镰仓大佛与江之电"><a href="#镰仓大佛与江之电" class="headerlink" title="镰仓大佛与江之电"></a>镰仓大佛与江之电</h2><p>从长谷寺出来，步行不久便能瞻仰到镰仓的象征——高德院的青铜大佛。他静静地坐落在那里，神情悲悯而安详，仿佛见证了数百年的风雨变迁。</p>
<p>回程时，我特意体验了复古的江之电。当电车缓缓驶过海岸线，窗外就是波光粼粼的大海和《灌篮高手》里的经典路口时，童年的记忆瞬间涌上心头。</p>
<h2 id="小町通的美食慰藉"><a href="#小町通的美食慰藉" class="headerlink" title="小町通的美食慰藉"></a>小町通的美食慰藉</h2><p>旅行的结尾，自然要用美食来画上句号。小町通商业街上人头攒动，我在这里品尝了：</p>
<ul>
<li>软糯的酱油团子</li>
<li>冰凉的紫薯冰淇淋</li>
<li>新鲜出炉的仙贝</li>
</ul>
<blockquote>
<p>旅行的意义，或许就是在熟悉的生活里，给自己一个短暂抽离的机会，然后带着新的能量重新出发。</p>
</blockquote>
<p>镰仓的一天，是治愈的一天。</p>
]]></content>
      <tags>
        <tag>旅行</tag>
        <tag>日本</tag>
        <tag>镰仓</tag>
      </tags>
  </entry>
</search>
